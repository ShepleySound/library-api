openapi: "3.0.2"
info:
  title: Basic Auth
  version: "1.0"
servers:
  - url: http://localhost:3000
paths:
  /auth/signup:
    post:
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
  /auth/signin:
    post:
      security:
        - BasicAuth: []
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthenticatedError"
  /api/books:
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "403":
          $ref: "#/components/responses/UnauthorizedError"
    post:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "403":
          $ref: "#/components/responses/UnauthorizedError"
  /api/books/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The book ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "403":
          $ref: "#/components/responses/UnauthorizedError"
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The book ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "403":
          $ref: "#/components/responses/UnauthorizedError"
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The book ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "403":
          $ref: "#/components/responses/UnauthorizedError"
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The book ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
        "403":
          $ref: "#/components/responses/UnauthorizedError"
components:
  responses:
    UnauthenticatedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
    UnauthorizedError:
      description: User is valid, but is unauthorized to perform this task.
      headers:
        WWW_Authenticate:
          schema:
            type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [reader, writer, librarian, architect, admin]
    Book:
      properties:
        title:
          type: string
        author:
          type: string
        pages:
          type: integer
